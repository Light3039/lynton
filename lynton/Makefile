# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_wasm
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
INCLUDES +=
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_wasm)
TARGETDIR = ../bin/Debug-WASM/lynton
TARGET = $(TARGETDIR)/lynton.html
OBJDIR = ../bin-int/Debug-WASM/lynton
DEFINES += -DDEBUG -DWASM
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c++17
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s WASM=1 -s EXPORTED_FUNCTIONS='["_main"]' -s EXPORTED_RUNTIME_METHODS='["cwrap"]' -s USE_SDL=2

else ifeq ($(config),debug_linux)
TARGETDIR = ../bin/Debug-Linux/lynton
TARGET = $(TARGETDIR)/lynton
OBJDIR = ../bin-int/Debug-Linux/lynton
DEFINES += -DDEBUG -DLINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += -lSDL2
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),debug_windows)
TARGETDIR = ../bin/Debug-Windows/lynton
TARGET = $(TARGETDIR)/lynton.exe.exe
OBJDIR = ../bin-int/Debug-Windows/lynton
DEFINES += -DDEBUG -DWINDOWS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release_wasm)
TARGETDIR = ../bin/Release-WASM/lynton
TARGET = $(TARGETDIR)/lynton.html
OBJDIR = ../bin-int/Release-WASM/lynton
DEFINES += -DRELEASE -DWASM
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O3 -g -std=c++17
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s WASM=1 -s EXPORTED_FUNCTIONS='["_main"]' -s EXPORTED_RUNTIME_METHODS='["cwrap"]' -s USE_SDL=2

else ifeq ($(config),release_linux)
TARGETDIR = ../bin/Release-Linux/lynton
TARGET = $(TARGETDIR)/lynton
OBJDIR = ../bin-int/Release-Linux/lynton
DEFINES += -DRELEASE -DLINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -g -std=c++17
LIBS += -lSDL2
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release_windows)
TARGETDIR = ../bin/Release-Windows/lynton
TARGET = $(TARGETDIR)/lynton.exe.exe
OBJDIR = ../bin-int/Release-Windows/lynton
DEFINES += -DRELEASE -DWINDOWS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -g -std=c++17
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),dist_wasm)
TARGETDIR = ../bin/Dist-WASM/lynton
TARGET = $(TARGETDIR)/lynton.html
OBJDIR = ../bin-int/Dist-WASM/lynton
DEFINES += -DDIST -DWASM
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O3
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O3 -std=c++17
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s WASM=1 -s EXPORTED_FUNCTIONS='["_main"]' -s EXPORTED_RUNTIME_METHODS='["cwrap"]' -s USE_SDL=2

else ifeq ($(config),dist_linux)
TARGETDIR = ../bin/Dist-Linux/lynton
TARGET = $(TARGETDIR)/lynton
OBJDIR = ../bin-int/Dist-Linux/lynton
DEFINES += -DDIST -DLINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -std=c++17
LIBS += -lSDL2
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),dist_windows)
TARGETDIR = ../bin/Dist-Windows/lynton
TARGET = $(TARGETDIR)/lynton.exe.exe
OBJDIR = ../bin-int/Dist-Windows/lynton
DEFINES += -DDIST -DWINDOWS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -std=c++17
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/sdl_test.o
OBJECTS += $(OBJDIR)/sdl_test.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking lynton
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning lynton
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/sdl_test.o: src/sdl_test.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif